Datatypes in other languages:

int x; // only store integers in this x...
char y; //only character can be stored in this...

var x=null;
let 
const 

Data Types:

1. Number: floating point numbers, integers , floats...
2. String: a sequence of Unicode characters... " ", ' '
3. Boolean: true or false 
4. object: Functions, Arrays, Date and many more...
5. null: a value that means "this is literally nothing" vs. undefined
6. undefined: a special value that indicates a vlaue has never been defined...

let s1= "some text";  String  some text
let s2= 'some text';  String  some text
let s3 = '134';  String "134"
let s4 = '134'+4; String  "1344" (concatenation)
let n1= 134;   Number 134
let n2 = 134.22   Number 134.22
let b1 = true  Boolean true
let b2 = false Boolean false
let b3 = !b2; Boolean  true 
let c ;   undefined   undefined
let d=null;  object   null


Operators:
 +, - , * , /, % modulo Operators

 ++, -- Increment /decrement operaters
 Post increment means make increment after using previous values
 Pre increment means make increment and then use it...

 = Assignment operator... let x=10;

 == equality operator

 === strict equality? coercion: automatic conversion of data type from one to other..

Binary Operators: that require two operans like +, - , * , / , %
Unary Operators: ++, --, ! 
Ternary Operator: (?:) short form of if else! 
condition ? value_if_true; value_if_false;


Loops:

for loop:

for(var i=0;i<1000;i++){
    console.log("I will never do it again");
}


for(initialization; condition; increment/decrement ){

    
}

var i =10;
i++; //anycase when this statement is executed the i becomes 11
console.log(i); //11



Functions in JavaScript:
    "A function is a subprogram, or a smaller portion of code that can be called(i.e;invoked) by another part of your program, another function, or by the environment in response to some user or device action(e.g; clicking a button, a newtwork request etc.)

    Syntax of Functions:
        Functions can take values(i.e., arguments) and may return a value.
            add NOT A FUNCTION...
            add( )

            juicer(apples)
             c add(a,b)
     Types of Fucntions in JavaScript:
        i)User-defined Functions
        ii) Pre-defined functions.

        I) User-defined Functions: functions defined by us (as users)
            i)Function Declarations
            ii)Function Expressions
            iii) Arrow Functions 

            Function Declarations:

            function noop(){

            }

            function square(n){
                return n*n;
            }

            function add(a,b){
                return a+b;
            }


            Function expressions:[ONLY IN JS]

            let noop = function(){ } //anonymous

            let square=function(n){return n*n}

            let add=function(a,b){ return a+b }

            noop();
            square(5);
            add(3,5);

            Arrows Functions:

            let noop = ()=>{ };
            let square = (n)=>{
                return n*n;
            }
            let add= (a,b)=>{
                return a+b;
            }


            What is an expression???? An expresion is something that evaluates to a value...

            x=5+3; NOT, it is an equation...
            5+3 Expressions
            x Expression

    Parameters and arguments:

    arguments : predefined...


    Rest operator (...): Self study for you!